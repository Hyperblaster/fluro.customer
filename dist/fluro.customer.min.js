angular.module("fluro.customer",["fluro.config"]).service("FluroCustomerService",function($sessionStorage,$localStorage,Fluro,FluroTokenService){var controller={};controller.customerStorageLocation=function(){return $sessionStorage},controller.login=function(credentials){function loginComplete(res){storage.$customer=res.data,console.log("Customer Login Sucess",storage.$customer)}function loginFailed(res){console.log("Customer Login Failed",res)}var storage=controller.customerStorageLocation(),request=FluroTokenService.login(credentials,{disableAutoAuthenticate:!0});return request.then(loginComplete,loginFailed),request},controller.hasExpired=function(){var storage=controller.customerStorageLocation();if(storage.$customer){var expiry=new Date(storage.$customer.expires),now=new Date;return expiry.getTime()<=now.getTime()}},controller.config=function(){function refreshSuccess(res){res.data;config.headers.Authorization="Bearer "+storage.$customer.token,console.log("Customer refresh success",res),deferred.resolve(config)}function refreshFailed(res){console.log("Customer refresh failed",res),deferred.reject(config)}var storage=controller.customerStorageLocation();if(storage.$customer&&storage.$customer.token){var config={};if(config.bypassInterceptor=!0,-1!=config.url.indexOf("/token/refresh"))return config;config.headers={Authorization:"Bearer "+storage.$customer.token};var deferred=$q.defer();if(storage.$customer.expires){var expired=controller.hasExpired();if(expired){var refreshRequest=controller.refresh();refreshRequest.then(refreshSuccess,refreshFailed)}else console.log("Customer still logged in",storage.$customer.token),config.headers.Authorization="Bearer "+storage.$customer.token,deferred.resolve(config)}else console.log("Doesnt expire so keep on keeping on"),config.headers.Authorization="Bearer "+storage.$customer.token,deferred.resolve(config);return deferred.promise}},controller.deleteSession=function(){var storage=controller.customerStorageLocation();delete storage.$customer};var inflightRequest;return controller.refresh=function(){if(inflightRequest)return inflightRequest;var storage=controller.customerStorageLocation(),$http=$injector.get("$http"),customer=storage.$customer;return customer&&customer.refreshToken?(inflightRequest=$http.post(Fluro.apiURL+"/token/refresh",{refreshToken:customer.refreshToken}),inflightRequest.success(function(res){inflightRequest=null,storage.$customer.refreshToken=res.refreshToken,storage.$customer.token=res.token,storage.$customer.expires=res.expires}),inflightRequest.error(function(res){inflightRequest=null,"invalid_refresh_token"==res?(console.log("your token has expired"),controller.deleteSession()):console.log("error refreshing token",res)}),inflightRequest):void 0},controller});