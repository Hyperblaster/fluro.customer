angular.module("fluro.customer",["fluro.config"]).service("FluroCustomerService",function($sessionStorage,$localStorage,$q,$injector,Fluro,FluroTokenService){var controller={};controller.defaultStorage="local",controller.get=function(){var storage=controller.customerStorageLocation();return storage.customer},controller.customerStorageLocation=function(){if(controller.storage)return controller.storage;switch(controller.defaultStorage){case"session":return $sessionStorage;default:return $localStorage}},controller.login=function(credentials){function loginComplete(res){storage.customer=res.data}function loginFailed(res){}var storage=controller.customerStorageLocation(),request=FluroTokenService.login(credentials,{disableAutoAuthenticate:!0});return request.then(loginComplete,loginFailed),request},controller.hasExpired=function(){var storage=controller.customerStorageLocation();if(storage.customer){var expiry=new Date(storage.customer.expires),now=new Date;return expiry.getTime()<=now.getTime()}},controller.config=function(){function refreshSuccess(res){res.data;config.headers.Authorization="Bearer "+storage.customer.token,deferred.resolve(config)}function refreshFailed(res){deferred.reject(config)}var deferred=$q.defer(),storage=controller.customerStorageLocation();if(!storage.customer||!storage.customer.token)return deferred.reject(),deferred.promise;var config={};if(config.bypassInterceptor=!0,config.headers={Authorization:"Bearer "+storage.customer.token},storage.customer.expires){var expired=controller.hasExpired();if(expired){var refreshRequest=controller.refresh();refreshRequest.then(refreshSuccess,refreshFailed)}else config.headers.Authorization="Bearer "+storage.customer.token,deferred.resolve(config)}else config.headers.Authorization="Bearer "+storage.customer.token,deferred.resolve(config);return deferred.promise},controller.deleteSession=function(){var storage=controller.customerStorageLocation();delete storage.customer};var inflightRequest;return controller.refresh=function(){if(inflightRequest)return inflightRequest;var storage=controller.customerStorageLocation(),$http=$injector.get("$http"),customer=storage.customer;return customer&&customer.refreshToken?(inflightRequest=$http.post(Fluro.apiURL+"/token/refresh",{refreshToken:customer.refreshToken}),inflightRequest.success(function(res){inflightRequest=null,storage.customer.refreshToken=res.refreshToken,storage.customer.token=res.token,storage.customer.expires=res.expires}),inflightRequest.error(function(res){inflightRequest=null,"invalid_refresh_token"==res&&controller.deleteSession()}),inflightRequest):void 0},controller});